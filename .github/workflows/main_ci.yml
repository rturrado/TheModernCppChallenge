# From: https://github.com/lukka/CppCMakeVcpkgTemplate/blob/main/.github/workflows/hosted-ninja-vcpkg_submod.yml
#
# The peculiarity of this workflow is that assumes vcpkg stored as a submodule of this repository.
# This workflow does the following:
# - Restores vcpkg artifacts from cache.
# - Sets up vcpkg if needed, then run CMake with CMakePreset.json using a configuration that leverages the vcpkg's toolchain file.
#   This will automatically run vcpkg to install dependencies described by the vcpkg.json manifest file.
#   It will be a no-op if those are restored from cache.
# - Finally builds the sources with Ninja.

name: main CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BOOST_ROOT: ${{github.workspace}}/3rdparty/boost
  BOOST_URL: https://sourceforge.net/projects/boost/files/boost/1.78.0/boost_1_78_0.tar.bz2/download  

jobs:
  configuration:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Restore Boost cache
        uses: actions/cache@v3
        id: cache-boost
        with:
          path: ${{env.BOOST_ROOT}}
          key: boost
      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          BOOST_ROOT=$(echo $BOOST_ROOT | sed 's/\\/\//g')
          mkdir -p $BOOST_ROOT
          curl --progress-bar --location --output $BOOST_ROOT/download.tar.bz2 $BOOST_URL
          7z -o$BOOST_ROOT x $BOOST_ROOT/download.tar.bz2 -y -bd
          7z -o$BOOST_ROOT x $BOOST_ROOT/download.tar -y -bd
          cd $BOOST_ROOT && cp -r boost_*/* .
          rm -rf boost_*/* download.tar.bz2 download.tar
        shell: bash

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg for building artifacts
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgJsonGlob: 'vcpkg.json'

      # Run CMake to generate Ninja project files, using the vcpkg's toolchain file to resolve and install the dependencies as specified in vcpkg.json
      - name: Configure tests and benchmarks
        run: |
          cmake --preset test
          cmake --preset benchmark

  build-and-run-debug-test:
    needs: configuration
    runs-on: windows-latest
    steps:
    - name: Build tests
      run: cmake --build --preset x64-Debug-Test
      shell: bash
    - name: Run tests
      working-directory: ${{github.workspace}}/build/test/test
      run: ./Debug/the_modern_c++_challenge_test.exe --gtest_brief=1 --gtest_also_run_disabled_tests
      shell: bash

  build-and-run-release-benchmark:
    needs: configuration
    runs-on: windows-latest
    steps:
    - name: Build benchmarks
      run: cmake --build --preset x64-Release-Benchmark
      shell: bash
    - name: Run benchmarks
      working-directory: ${{github.workspace}}/build/benchmark/benchmark
      run: ./Release/the_modern_c++_challenge_benchmark.exe
      shell: bash
